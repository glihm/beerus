name: continuous integration

on:
  pull_request:

env:
  BEERUS_VERSION: ci
  ETHEREUM_NETWORK: mainnet
  ETHEREUM_CONSENSUS_RPC_URL: ${{ secrets.ETHEREUM_CONSENSUS_RPC_URL }}
  ETHEREUM_EXECUTION_RPC_URL: ${{ secrets.ETHEREUM_EXECUTION_RPC_URL }}
  STARKNET_RPC_URL: ${{ secrets.STARKNET_RPC_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code
      - name: Checkout
        uses: actions/checkout@v3
      # Setup docker
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Build and export the beerus docker image
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: beerus:${{ env.BEERUS_VERSION }}
          outputs: type=docker,dest=/tmp/beerus.tar
      # Upload the beerus docker image as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: beerus
          path: /tmp/beerus.tar

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the source code
      - name: Checkout
        uses: actions/checkout@v3
      # Install hurl
      - name: Install dependencies
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/2.0.1/hurl_2.0.1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./hurl_2.0.1_amd64.deb
      # Download the beerus docker image
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: beerus
          path: /tmp
      # Load the beerus docker image
      - name: Load docker image
        run: |
          docker load --input /tmp/beerus.tar
          docker image ls -a
      # Run beerus RPC in the background
      - name: Run beerus
        run: |
          docker compose up -d 
          hurl --retry --retry-max-count 60 ./examples/beerus-rpc/starknet/starknet_blockNumber.hurl > /dev/null;
      # todo: replace by tests
      - name: print the docker logs
        run: docker compose logs
